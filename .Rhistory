devtools::document()
setwd("C:/Users/dhanu/Documents/DhanujG/Projects/weightedClustSuite/extra_files")
devtools::install_github("dhanujg/weightedClustSuite")
devtools::install_github("dhanujg/weightedClustSuite")
devtools::install_github("dhanujg/weightedClustSuite")
devtools::install_github("dhanujg/weightedClustSuite")
knitr::opts_chunk$set(echo = TRUE)
#Run this command to install the package on your machine
devtools::install_github("dhanujg/weightedClustSuite")
# Read in the Data
Colnames = c('X','Y','Weight')
Species_Data <- read.csv(file.choose(), header = FALSE)
#Create Input Matrices for the package
Trait_Species <- as.vector(Species_Data[,1:2])
Weight_Species <- as.vector(Species_Data[,3])
Dist_Species <- dist(Species_Data[,1:2])
Trait_Species
Weight_Species
library(weightedClustSuite)
#feed in the input data to create the base clustering object with ClustObj function
SpeciesClust <- ClustObj(Trait_Species, Weight_Species, Dist_Species, gaussian=TRUE, verbose = TRUE)
#We can now update the clustering object (SpeciesClust) with data from a clustering algorithm, here we will run K mediods and Spectral to get a quick visualization of the data.
SpeciesClust <- findKMediodsClusters(SpeciesClust, neighbors = 5 )
SpeciesClust <- findSpectralClusters(SpeciesClust, neighbors = 5 )
SpeciesClust <- findDBSCANClusters(SpeciesClust, eps = 0.05)
#SpeciesClust <- findDensityPeakClusters(SpeciesClust, rho=4.01, delta=0.21)
#We can also create plots of each of the clustering assignments WITH the datapoint sizes changing corresponding to the weights
KMediods_2D <- plot2DCluster(SpeciesClust, SpeciesClust$clustersKmediods, type = 'Kmediods')
Spectral_2D <- plot2DCluster(SpeciesClust, SpeciesClust$clustersSpectral, type = 'Spectral')
#clustering assignments are also stored in the class object and can be viewed in examples like
SpeciesClust$clustersKmediods
#Create a Validation chart to test various rho/delta combinations and obtain ideal classification score
SpeciesChart <- findDensityPeakCluster_validationChart(SpeciesClust, DBCV = FALSE, status = FALSE)
View(SpeciesChart)
#We can also visualize the density peaks by rho/delta values in this plot
plotDensityPeak(SpeciesClust)
#from the validation chart, we have chosen this specific rho/delta combination to give us 5 clusters with no unclassified points, we can then run the Density Peak clustering
SpeciesClust <- findDensityPeakClusters(SpeciesClust, rho=4.01, delta=0.21, verbose = FALSE)
#Now we can plot our clustering assignments through a 2D Graph, a MDS graph (for higher dimensions), and a TSNE Graph. The cross marks indicate the cluster centers and the size of the points correspond to the weights.
DensityPeak_2D = plot2D(SpeciesClust)
#from the validation chart, we have chosen this specific rho/delta combination to give us 5 clusters with no unclassified points, we can then run the Density Peak clustering
SpeciesClust <- findDensityPeakClusters(SpeciesClust, rho=4.01, delta=0.21, verbose = FALSE)
#Now we can plot our clustering assignments through a 2D Graph, a MDS graph (for higher dimensions), and a TSNE Graph. The cross marks indicate the cluster centers and the size of the points correspond to the weights.
#DensityPeak_2D = plot2D(SpeciesClust)
DensityPeak_MDS = plotMDS(SpeciesClust)
DensityPeak_TSNE = plotTSNE(SpeciesClust)
DensityPeak_2D
#DensityPeak_2D
DBSCAN_2D = plot2DCluster(SpeciesClust, SpeciesClust$clustersDBSCAN, type = 'DBSCAN')
# Read in the Data
Colnames = c('X','Y','Weight')
Species_Data <- read.csv(file.choose(), header = FALSE)
#Create Input Matrices for the package
Trait_Species <- as.vector(Species_Data[,1:2])
Weight_Species <- as.vector(Species_Data[,3])
Dist_Species <- dist(Species_Data[,1:2])
Trait_Species
Weight_Species
library(weightedClustSuite)
#feed in the input data to create the base clustering object with ClustObj function
SpeciesClust <- ClustObj(Trait_Species, Weight_Species, Dist_Species, gaussian=TRUE, verbose = TRUE)
#We can now update the clustering object (SpeciesClust) with data from a clustering algorithm, here we will run K mediods and Spectral to get a quick visualization of the data.
SpeciesClust <- findKMediodsClusters(SpeciesClust, neighbors = 5 )
SpeciesClust <- findSpectralClusters(SpeciesClust, neighbors = 5 )
SpeciesClust <- findDBSCANClusters(SpeciesClust, eps = 0.05)
#SpeciesClust <- findDensityPeakClusters(SpeciesClust, rho=4.01, delta=0.21)
#We can also create plots of each of the clustering assignments WITH the datapoint sizes changing corresponding to the weights
KMediods_2D <- plot2DCluster(SpeciesClust, SpeciesClust$clustersKmediods, type = 'Kmediods')
Spectral_2D <- plot2DCluster(SpeciesClust, SpeciesClust$clustersSpectral, type = 'Spectral')
#clustering assignments are also stored in the class object and can be viewed in examples like
SpeciesClust$clustersKmediods
#Create a Validation chart to test various rho/delta combinations and obtain ideal classification score
SpeciesChart <- findDensityPeakCluster_validationChart(SpeciesClust, DBCV = FALSE, status = FALSE)
View(SpeciesChart)
#We can also visualize the density peaks by rho/delta values in this plot
plotDensityPeak(SpeciesClust)
#from the validation chart, we have chosen this specific rho/delta combination to give us 5 clusters with no unclassified points, we can then run the Density Peak clustering
SpeciesClust <- findDensityPeakClusters(SpeciesClust, rho=4.01, delta=0.21, verbose = FALSE)
#Now we can plot our clustering assignments through a 2D Graph, a MDS graph (for higher dimensions), and a TSNE Graph. The cross marks indicate the cluster centers and the size of the points correspond to the weights.
DensityPeak_2D = plotDensityPeak2D(SpeciesClust)
DensityPeak_MDS = plotMDS(SpeciesClust)
DensityPeak_TSNE = plotTSNE(SpeciesClust)
#We can also visualize the density peaks by rho/delta values in this plot
plotDensityPeak(SpeciesClust)
#Create a Validation chart to test various rho/delta combinations and obtain ideal classification score
SpeciesChart <- findDensityPeakCluster_validationChart(SpeciesClust, DBCV = FALSE, status = FALSE)
View(SpeciesChart)
#from the validation chart, we have chosen this specific rho/delta combination to give us 5 clusters with no unclassified points, we can then run the Density Peak clustering
SpeciesClust <- findDensityPeakClusters(SpeciesClust, rho=4.01, delta=0.21, verbose = FALSE)
#Now we can plot our clustering assignments through a 2D Graph, a MDS graph (for higher dimensions), and a TSNE Graph. The cross marks indicate the cluster centers and the size of the points correspond to the weights.
DensityPeak_2D = plotDensityPeak2D(SpeciesClust)
DensityPeak_MDS = plotMDS(SpeciesClust)
DensityPeak_TSNE = plotTSNE(SpeciesClust)
DensityPeak_2D
DBSCAN_2D = plot2DCluster(SpeciesClust, SpeciesClust$clustersDBSCAN, type = 'DBSCAN')
SpeciesClust$clustersKmediods[1:5]
SpeciesClust$clustersKmediods[1:10]
SpeciesChart <- findDensityPeakCluster_validationChart(SpeciesClust, DBCV = FALSE, status = FALSE)
View(SpeciesChart[1:5])
SpeciesChart <- findDensityPeakCluster_validationChart(SpeciesClust, DBCV = FALSE, status = FALSE)
View(SpeciesChart[1:5,])
# Read in the Data
Colnames = c('X','Y','Weight')
Species_Data <- read.csv(file.choose(), header = FALSE)
#Create Input Matrices for the package
Trait_Species <- as.vector(Species_Data[,1:2])
Weight_Species <- as.vector(Species_Data[,3])
Dist_Species <- dist(Species_Data[,1:2])
Trait_Species[1:5,]
Weight_Species[1:5]
library(weightedClustSuite)
#feed in the input data to create the base clustering object with ClustObj function
SpeciesClust <- ClustObj(Trait_Species, Weight_Species, Dist_Species, gaussian=TRUE, verbose = TRUE)
#SpeciesClust <- findDensityPeakClusters(SpeciesClust, rho=4.01, delta=0.21)
SpeciesClust <- findKMediodsClusters(SpeciesClust, neighbors = 5 )
SpeciesClust <- findSpectralClusters(SpeciesClust, neighbors = 5 )
SpeciesClust <- findDBSCANClusters(SpeciesClust, eps = 0.05)
KMediods_2D <- plot2DCluster(SpeciesClust, SpeciesClust$clustersKmediods, type = 'Kmediods')
Spectral_2D <- plot2DCluster(SpeciesClust, SpeciesClust$clustersSpectral, type = 'Spectral')
SpeciesClust$clustersKmediods[1:10]
SpeciesChart <- findDensityPeakCluster_validationChart(SpeciesClust, DBCV = FALSE, status = FALSE)
View(SpeciesChart[1:5,])
SpeciesClust <- findDensityPeakClusters(SpeciesClust, rho=4.01, delta=0.21, verbose = FALSE)
DensityPeak_2D = plotDensityPeak2D(SpeciesClust)
DensityPeak_MDS = plotMDS(SpeciesClust)
DensityPeak_TSNE = plotTSNE(SpeciesClust)
DensityPeak_2D = plotDensityPeak2D(SpeciesClust)
DBSCAN_2D = plot2DCluster(SpeciesClust, SpeciesClust$clustersDBSCAN, type = 'DBSCAN')
